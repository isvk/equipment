{"version":3,"sources":["store/loadStatus.ts","store/saveStatus.ts","store/deleteStatus.ts","models/main.ts","store/main/types.ts","store/main/reducer.ts","models/node.tsx","store/nodes/types.ts","store/nodes/reducer.ts","store/item/types.ts","store/item/reducer.ts","store/rootReducer.ts","store/nodes/actions.ts","store/main/actions.ts","store/nodes/saga.ts","store/item/actions.ts","store/rootSelector.ts","store/main/selectors.ts","store/item/saga.ts","store/rootSaga.ts","services/firebase.ts","models/item.tsx","services/index.ts","services/api/apiNode.ts","services/api/apiItem.ts","hooks/useCustomDispatch.ts","hooks/useCustomSelector.ts","component/Alert/Alert.tsx","component/Loading/LoadNodes.tsx","component/Loading/LoadItems.tsx","component/Catalog/Catalog.tsx","component/TreeView/Element/AvailabilityItemsIcon/AvailabilityItemsIcon.tsx","component/TreeView/Element/Element.tsx","component/TreeView/ListElements/ListElements.tsx","component/TreeView/TreeView.tsx","component/ListItems/ListItems.tsx","component/UI/Header/Header.tsx","component/UI/Footer/Footer.tsx","component/Pages/MainPage/MainPage.tsx","component/ControlPanel/ControlPanel.tsx","component/Pages/NodePage/NodePage.tsx","component/UI/Button/Button.tsx","component/UI/FieldInput/FieldInput.tsx","component/UI/Modal/Modal.tsx","component/FormItem/FormItem.tsx","component/FormItem/CreateFormItem/CreateItem.tsx","component/Pages/CreateItemPage/CreateItemPage.tsx","component/FormItem/EditFormItem/EditItem.tsx","component/Pages/EditItemPage/EditItemPage.tsx","App.tsx","index.tsx"],"names":["loadStatus","saveStatus","deleteStatus","initialMain","statusAsync","loadNodes","notLoaded","loadItems","saveItem","notSaved","deleteItem","notDeleted","Main","Record","SET_STATUS_ASYNC","reducer","state","action","type","types","set","status","value","initialNode","id","name","descendants","undefined","isSelected","selectedByAncestorId","getIdsAllDescendants","ancestorId","result","cascade","ancestor","get","push","forEach","descendantId","Node","LOAD_NODES","LOAD_NODES_SUCCESS","SET_SELECTED_BY_IDS_REST_UNSELECTED","Map","nodes","node","selectedIds","ids","setIn","descendantIds","concat","includes","LOAD_ITEMS","LOAD_ITEMS_SUCCESS","CREATE_ITEM","CREATE_ITEM_SUCCESS","UPDATE_ITEM","UPDATE_ITEM_SUCCESS","DELETE_ITEM","DELETE_ITEM_SUCCESS","items","item","remove","createRootReducer","history","combineReducers","router","connectRouter","main","loadNodesSuccess","setSelectedByIdsRestUnselected","setStatusAsync","loadNodesAsync","nodeSaga","services","put","load","call","container","ApiNode","loaded","errorServer","console","error","takeEvery","loadItemsSuccess","createItemSuccess","updateItemSuccess","propsFirstSelector","_","prop","mainState","mainGetStatusAsync","createSelector","mainGetStatusLoadNodesAsync","mainGetStatusLoadItemsAsync","nodeState","nodesGetNodeById","find","nodesGetNodesByIds","filter","nodesGetRootNodes","reduce","nodesGetSelectedNodes","nodesGetMainSelectedNode","itemState","itemsGetNumberItemsByNodeId","nodeIds","nodeId","size","itemsGetItemsByNodeIds","itemsGetItemsForSelectedNodes","map","itemsGetItemById","loadItemsAsync","createItemAsync","updateItemAsync","deleteItemAsync","itemSaga","ApiItem","save","createItem","itemId","loadItem","saved","updateItem","delete","select","deleted","configFirebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initialItem","count","Item","bottle","Bottle","service","firestore","collection","request","getOne","doc","app","initializeApp","this","firebase","then","apiNodes","docs","apiNode","data","parts","part","apiItems","apiItem","length","Number","place","filestore","add","response","Error","useCustomDispatch","useDispatch","useCustomSelector","selector","arg","useSelector","Alert","props","className","text","LoadNodes","dispatch","useEffect","LoadItems","Catalog","head","navigation","control","content","AvailabilityItemsIcon","numberItems","Element","nodeUrl","to","ListElements","valueSeq","TreeView","rootNodes","ListItems","Header","children","Footer","MainPage","toJS","ControlPanel","links","link","url","label","NodePage","selectedNodes","useParams","itemsForSelectedNodes","Button","FieldInput","Modal","domElement","document","getElementById","ReactDOM","createPortal","title","onClick","onClose","FormItem","useState","setItem","isItemNotSaved","is","showModalDelete","setShowModalDelete","onChange","e","currentTarget","String","min","handleSave","typeForm","handleDelete","CreateItem","CreateItemPage","ancestorNode","EditItem","EditItemPage","mainSelectedNode","unshift","App","exact","path","component","createHashHistory","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","routerMiddleware","run","rootSaga","all","render","StrictMode"],"mappings":"icAAYA,ECAAC,ECAAC,E,kJFAAF,O,yBAAAA,I,eAAAA,I,mBAAAA,I,8BAAAA,M,cCAAC,O,uBAAAA,I,eAAAA,I,iBAAAA,I,8BAAAA,M,cCAAC,O,2BAAAA,I,mBAAAA,I,qBAAAA,I,8BAAAA,M,KCSZ,IAAMC,EAAqB,CACvBC,YAAa,CACTC,UAAWL,EAAWM,UACtBC,UAAWP,EAAWM,UACtBE,SAAUP,EAAWQ,SACrBC,WAAYR,EAAaS,aAIZC,E,4HAAaC,YAAOV,IClB5BW,EAAmB,mBCiBjBC,EAVC,WAA+E,IAA9EC,EAA6E,uDAAzD,IAAIJ,EAAQK,EAA6C,uCAC1F,OAAQA,EAAOC,MACX,KAAKC,EACD,OAAOH,EAAMI,IAAI,cAAV,2BAA8BJ,EAAMZ,aAApC,kBAAkDa,EAAOI,OAASJ,EAAOK,SAEpF,QACI,OAAON,I,QCFNO,EAAqB,CAC9BC,GAAI,GACJC,KAAM,GACNC,iBAAaC,EACbC,YAAY,EACZC,qBAAsB,IAGbC,EAAuB,SAACd,EAAmBe,GACpD,IAAIC,EAAuB,GAa3B,OAXgB,SAAVC,EAAWF,GACb,IAAMG,EAAWlB,EAAMmB,IAAIJ,GAEvBG,GAAYA,EAASR,cACrBM,EAAOI,KAAP,MAAAJ,EAAM,YAASE,EAASR,cACxBQ,EAASR,YAAYW,SAAQ,SAACC,GAAD,OAAkBL,EAAQK,OAI/DL,CAAQF,GAEDC,GAGUO,E,4HAAa1B,YAAOU,ICpC5BiB,EAAa,aACbC,EAAqB,qBACrBC,EAAsC,sCCmDpC3B,EA7CC,WAA0E,IAAzEC,EAAwE,uDAApD2B,cAAO1B,EAA6C,uCACrF,OAAQA,EAAOC,MACX,KAAKC,EAID,OAHAF,EAAO2B,MAAMP,SAAQ,SAACQ,GAClB7B,EAAQA,EAAMI,IAAIyB,EAAKrB,GAAIqB,MAExB7B,EAEX,KAAKG,EACD,IAAI2B,EAA4B7B,EAAO8B,IA6BvC,OA3BA9B,EAAO8B,IAAIV,SAAQ,SAACN,GAChBf,EAAQA,EACHgC,MAAM,CAACjB,EAAY,eAAe,GAClCiB,MAAM,CAACjB,EAAY,wBAAyBR,EAAYM,sBAE7D,IAAMoB,EAAgBnB,EAAqBd,EAAOe,GAElDkB,EAAcZ,SAAQ,SAACC,GACnBtB,EAAQA,EACHgC,MAAM,CAACV,EAAc,eAAe,GACpCU,MAAM,CAACV,EAAc,wBAAyBP,MAGvDe,EAAcA,EAAYI,OAAOD,MAIrCjC,EAAMqB,SAAQ,SAACQ,GACNC,EAAYK,SAASN,EAAKrB,MACvBqB,EAAKjB,aAAeL,EAAYK,aAChCZ,EAAQA,EAAMgC,MAAM,CAACH,EAAKrB,GAAI,cAAeD,EAAYK,aAEzDiB,EAAKhB,uBAAyBN,EAAYM,uBAC1Cb,EAAQA,EAAMgC,MAAM,CAACH,EAAKrB,GAAI,wBAAyBD,EAAYM,2BAIxEb,EAEX,QACI,OAAOA,ICjDNoC,EAAa,cACbC,EAAqB,qBACrBC,EAAc,cACdC,EAAsB,sBACtBC,EAAc,cACdC,EAAsB,sBACtBC,EAAc,cACdC,EAAsB,sBCqBpB5C,EApBC,WAA0E,IAAzEC,EAAwE,uDAApD2B,cAAO1B,EAA6C,uCACrF,OAAQA,EAAOC,MACX,KAAKC,EAID,OAHAF,EAAO2C,MAAMvB,SAAQ,SAACwB,GAClB7C,EAAQA,EAAMI,IAAIyC,EAAKrC,GAAIqC,MAExB7C,EAEX,KAAKG,EACL,KAAKA,EACD,OAAOH,EAAMI,IAAIH,EAAO4C,KAAKrC,GAAIP,EAAO4C,MAE5C,KAAK1C,EACD,OAAOH,EAAM8C,OAAO7C,EAAOO,IAE/B,QACI,OAAOR,ICFJ+C,EARW,SAACC,GAAD,OACtBC,YAAgB,CACZC,OAAQC,YAAcH,GACtBI,OACAxB,QACAgB,W,gCCXKS,EAAmB,SAACzB,GAAD,MAC3B,CACG1B,KAAMC,EACNyB,UAGK0B,EAAiC,SAACvB,GAAD,MACzC,CACG7B,KAAMC,EACN4B,QCXKwB,EAAiB,SAAClD,EAAmCC,GAApC,MACzB,CACGJ,KAAMC,EACNE,SACAC,U,WCHEkD,I,WAaeC,IAbzB,SAAUD,GAAeE,GAAzB,uEAEQ,OAFR,kBAEcC,YAAIJ,EAAe,YAAavE,EAAW4E,OAFzD,OAGsB,OAHtB,SAG4BC,YAAKH,EAASI,UAAUC,QAAQ1E,WAH5D,OAIQ,OADMuC,EAHd,gBAIc+B,YAAIN,EAAiBzB,IAJnC,OAKQ,OALR,UAKc+B,YAAIJ,EAAe,YAAavE,EAAWgF,SALzD,gCAOQ,OAPR,oCAOcL,YAAIJ,EAAe,YAAavE,EAAWiF,cAPzD,QAQQC,QAAQC,MAAM,qCACdD,QAAQC,MAAR,MATR,sDAae,SAAUV,GAASC,GAAnB,iEACX,OADW,SACLU,YAAUjE,EAAkBqD,GAAgBE,GADvC,uC,aCZFW,GAAmB,SAACzB,GAAD,MAC3B,CACG1C,KAAMC,EACNyC,UASK0B,GAAoB,SAACzB,GAAD,MAC5B,CACG3C,KAAMC,EACN0C,SAUK0B,GAAoB,SAAC/D,EAAgBqC,GAAjB,MAC5B,CACG3C,KAAMC,EACN0C,S,SC9BF2B,GAAqB,SAACC,EAAWC,GAAZ,OAA0BA,GAExCC,GAAY,SAAC3E,GAAD,OAA6BA,EAAMoD,MAC/CwB,GAAqBC,aAAeF,ICPnB,SAAC3E,GAAD,OAAuBA,EAAMZ,eDQ9C0F,GAA8BD,aAAeF,ICPvB,SAAC3E,GAAD,OAAuBA,EAAMZ,YAAYC,aDQ/D0F,GAA8BF,aAAeF,ICPvB,SAAC3E,GAAD,OAAuBA,EAAMZ,YAAYG,aDS/DyF,GAAY,SAAChF,GAAD,OAA6BA,EAAM4B,OAC/CqD,GAAmBJ,aAAeG,GAAWR,IAAoB,SAAC5C,EAAOpB,GAClF,OAAOoB,EAAMsD,MAAK,SAACrD,GAAD,OAAUA,EAAKrB,KAAOA,QAE/B2E,GAAqBN,aAAeG,GAAWR,IAAoB,SAAC5C,EAAOG,GACpF,OAAOH,EAAMwD,QAAO,SAACvD,GAAD,QAAWE,GAAMA,EAAII,SAASN,EAAKrB,UAE9C6E,GAAoBR,aAAeG,IAAW,SAACpD,GACxD,IAAMlB,EAAckB,EAAM0D,QAAO,SAACtE,EAAsBa,GACpD,OAAIA,EAAKnB,YAAoBM,EAAOkB,OAAOL,EAAKnB,aAEzCM,IACR,IAEH,OAAOY,EAAMwD,QAAO,SAACvD,GAAD,OAAWnB,EAAYyB,SAASN,EAAKrB,UAEhD+E,GAAwBV,aAAeG,IAAW,SAACpD,GAC5D,OAAOA,EAAMwD,QAAO,SAACvD,GAAD,OAAUA,EAAKjB,iBAE1B4E,GAA2BX,aAAeU,IAAuB,SAAC3D,GAAD,OAC1EA,EAAMsD,MAAK,SAACrD,GAAD,OAAUA,EAAKhB,uBAAyBN,EAAYM,2BAGtD4E,GAAY,SAACzF,GAAD,OAA6BA,EAAM4C,OAC/C8C,GAA8Bb,cACvC,SAAC7E,GAAD,OAA6BA,IAC7BwE,IACA,SAACxE,EAAOQ,GACJ,IAAImF,EAAU7E,EAAqBd,EAAM4B,MAAOpB,GAGhD,OAFAmF,EAAQvE,KAAKZ,GAENR,EAAM4C,MAAMwC,QAAO,SAACvC,GAAD,QAAWA,EAAK+C,QAASD,EAAQxD,SAASU,EAAK+C,WAAkBC,QAGtFC,GAAyBjB,aAAeY,GAAWjB,IAAoB,SAAC5B,EAAOb,GACxF,OAAOa,EAAMwC,QAAO,SAACvC,GAAD,QAAWA,EAAK+C,QAAS7D,EAAII,SAASU,EAAK+C,cAEtDG,GAAgC,SAAC/F,GAC1C,IAAM2F,EAAU3F,EAAM4B,MAAMwD,QAAO,SAACvD,GAAD,OAAUA,EAAKjB,cAAYoF,KAAI,SAACnE,GAAD,OAAUA,EAAKrB,MAEjF,OAAOR,EAAM4C,MAAMwC,QAAO,SAACvC,GAAD,QAAWA,EAAK+C,QAASD,EAAQxD,SAASU,EAAK+C,YAEhEK,GAAmBpB,aAAeY,GAAWjB,IAAoB,SAAC5B,EAAOpC,GAClF,OAAOoC,EAAMsC,MAAK,SAACrC,GAAD,OAAUA,EAAKrC,KAAOA,Q,YErClC0F,I,YAaAC,I,YAeAC,I,YAcAC,I,YAeeC,IAzDzB,SAAUJ,GAAexC,GAAzB,uEAEQ,OAFR,kBAEcC,YAAIJ,EAAe,YAAavE,EAAW4E,OAFzD,OAGsB,OAHtB,SAG4BC,YAAKH,EAASI,UAAUyC,QAAQhH,WAH5D,OAIQ,OADMqD,EAHd,gBAIce,YAAIU,GAAiBzB,IAJnC,OAKQ,OALR,UAKce,YAAIJ,EAAe,YAAavE,EAAWgF,SALzD,gCAOQ,OAPR,oCAOcL,YAAIJ,EAAe,YAAavE,EAAWiF,cAPzD,QAQQC,QAAQC,MAAM,qCACdD,QAAQC,MAAR,MATR,uDAaA,SAAUgC,GAAgBzC,EAAyBzD,GAAnD,yEAEQ,OAFR,kBAEc0D,YAAIJ,EAAe,WAAYtE,EAAWuH,OAFxD,OAGuB,OAHvB,SAG6B3C,YAAKH,EAASI,UAAUyC,QAAQE,WAAYxG,EAAO4C,MAHhF,OAIqB,OADP6D,EAHd,gBAI2B7C,YAAKH,EAASI,UAAUyC,QAAQI,SAAUD,GAJrE,OAKQ,OADM7D,EAJd,iBAKcc,YAAIW,GAAkBzB,IALpC,QAMQ,OANR,UAMcc,YAAIJ,EAAe,WAAYtE,EAAW2H,QANxD,QAOQ,OAPR,UAOcjD,YAAIvC,aAAK,iBAAmByB,EAAKrC,KAP/C,gCASQ,OATR,oCAScmD,YAAIJ,EAAe,WAAYtE,EAAWgF,cATxD,QAUQC,QAAQC,MAAM,sCACdD,QAAQC,MAAR,MAXR,uDAeA,SAAUiC,GAAgB1C,EAAyBzD,GAAnD,uEAEQ,OAFR,kBAEc0D,YAAIJ,EAAe,WAAYtE,EAAWuH,OAFxD,OAGQ,OAHR,SAGc3C,YAAKH,EAASI,UAAUyC,QAAQM,WAAY5G,EAAOO,GAAIP,EAAO4C,MAH5E,OAIqB,OAJrB,SAI2BgB,YAAKH,EAASI,UAAUyC,QAAQI,SAAU1G,EAAOO,IAJ5E,OAKQ,OADMqC,EAJd,iBAKcc,YAAIY,GAAkBtE,EAAOO,GAAIqC,IAL/C,QAMQ,OANR,UAMcc,YAAIJ,EAAe,WAAYtE,EAAW2H,QANxD,gCAQQ,OARR,oCAQcjD,YAAIJ,EAAe,WAAYtE,EAAWgF,cARxD,QASQC,QAAQC,MAAM,qCACdD,QAAQC,MAAR,MAVR,uDAcA,SAAUkC,GAAgB3C,EAAyBzD,GAAnD,uEAEQ,OAFR,kBAEc0D,YAAIJ,EAAe,aAAcrE,EAAa4H,SAF5D,OAGqB,OAHrB,SAG2BC,YAAOd,GAAkBhG,EAAOO,IAH3D,OAIQ,OADMqC,EAHd,gBAIcgB,YAAKH,EAASI,UAAUyC,QAAQ7G,WAAYO,EAAOO,IAJjE,OAKQ,OALR,UAKcmD,aHrBoBnD,EGqBEP,EAAOO,GHpBtC,CACGN,KAAMC,EACNK,QGaR,QAMQ,OANR,UAMcmD,YAAIJ,EAAe,aAAcrE,EAAa8H,UAN5D,QAOQ,OAPR,UAOcrD,YAAIvC,aAAK,iBAAmByB,EAAK+C,SAP/C,gCASQ,OATR,oCAScjC,YAAIJ,EAAe,aAAcrE,EAAa+E,cAT5D,QAUQC,QAAQC,MAAM,qCACdD,QAAQC,MAAR,MAXR,kCHhBiC,IAAC3D,IGgBlC,kBAee,SAAU8F,GAAS5C,GAAnB,iEACX,OADW,SACLU,YAAUjE,EAAkB+F,GAAgBxC,GADvC,OAEX,OAFW,SAELU,YAAUjE,EAAmBgG,GAAiBzC,GAFzC,OAGX,OAHW,SAGLU,YAAUjE,EAAmBiG,GAAiB1C,GAHzC,OAIX,OAJW,SAILU,YAAUjE,EAAmBkG,GAAiB3C,GAJzC,wCCvEA,I,kBCkBTuD,I,kBAAiB,CACnBC,OAAQC,0CACRC,WAAYD,mCACZE,YAAaF,0EACbG,UAAWH,mBACXI,cAAeJ,+BACfK,kBAAmBL,eACnBM,MAAON,8CCpBEO,GAAqB,CAC9BlH,GAAI,GACJC,KAAM,GACNkH,MAAO,EACP/B,OAAQ,IAGSgC,G,4HAAa/H,YAAO6H,KCZrCG,GAAS,IAAIC,KAEFD,MACfA,GAAOE,QAAQ,YFCX,aAAe,IAAD,gCAFdC,eAEc,OAKd7G,IAAM,SAAC8G,GAAD,OAAwB,EAAKC,QAAQD,GAAY9G,OALzC,KAOdgH,OAAS,SAACF,EAAoBzH,GAArB,OAAoC,EAAK0H,QAAQD,GAAYG,IAAI5H,GAAIW,OAPhE,KASd2F,OAAS,SAACmB,EAAoBzH,GAArB,OAAoC,EAAK0H,QAAQD,GAAYG,IAAI5H,GAAIsG,UAThE,KAWdoB,QAAU,SAACD,GAAD,OAAwB,EAAKD,UAAUC,WAAWA,IAVxDI,KAAIC,cAAcrB,IAClBsB,KAAKP,UAAYK,KAAIL,eEF7BH,GAAOE,QAAQ,WCEX,WAAoBS,GAA6D,IAAD,OAA/BP,EAA+B,uDAAV,SAAU,yBAA5DO,WAA4D,KAA/BP,aAA+B,KAEhF5I,UAAY,WACR,OAAO,EAAKmJ,SAASrH,IAAI,EAAK8G,YAAYQ,MAAK,SAACC,GAC5C,OAAOA,EAASC,KAAK3C,KAAI,SAAC4C,GAAa,IAAD,EAClC,OAAO,IAAIrH,EAAK,CACZf,GAAIoI,EAAQpI,GACZC,KAAMmI,EAAQC,OAAOpI,KACrBC,YAAW,UAAEkI,EAAQC,OAAOC,aAAjB,aAAE,EAAsB9C,KAAI,SAAC+C,GAAD,OAAUA,EAAKvI,iBDVvC,YACnCqH,GAAOE,QAAQ,WEGX,WAAoBS,GAAgE,IAAD,OAAlCP,EAAkC,uDAAb,YAAa,yBAA/DO,WAA+D,KAAlCP,aAAkC,KAEnF1I,UAAY,WACR,OAAO,EAAKiJ,SAASrH,IAAI,EAAK8G,YAAYQ,MAAK,SAACO,GAC5C,OAAOA,EAASL,KACX3C,KAAI,SAACiD,GAC8D,IAAD,EAA/D,GAAIA,EAAQzI,GAAG0I,OAAS,GAAKC,OAAOF,EAAQJ,OAAOlB,OAAS,EACxD,OAAO,IAAIC,GAAK,CACZpH,GAAIyI,EAAQzI,GACZoF,OAAM,UAAEqD,EAAQJ,OAAOO,aAAjB,aAAE,EAAsB5I,GAC9BC,KAAMwI,EAAQJ,OAAOpI,KACrBkH,MAAOwB,OAAOF,EAAQJ,OAAOlB,YAMxCvC,QAAO,SAAC6D,GAAD,OAAaA,SAjBkD,KAqBnFtC,SAAW,SAACnG,GACR,OAAO,EAAKgI,SAASL,OAAO,EAAKF,WAAYzH,GAAIiI,MAAK,SAACQ,GAA2B,IAAD,EAC7E,OAAO,IAAIrB,GAAK,CACZpH,GAAIyI,EAAQzI,GACZoF,OAAM,UAAEqD,EAAQJ,OAAOO,aAAjB,aAAE,EAAsB5I,GAC9BC,KAAMwI,EAAQJ,OAAOpI,KACrBkH,MAAOwB,OAAOF,EAAQJ,OAAOlB,aA3B0C,KAgCnFlB,WAAa,SAAC5D,GACV,GAAIA,EAAK+C,OAAQ,CACb,IAAIyD,EAAY,EAAKb,SAASR,UAE9B,OAAOqB,EACFpB,WAAW,EAAKA,YAChBqB,IAAI,CACD7I,KAAMoC,EAAKpC,KACXkH,MAAO9E,EAAK8E,MACZyB,MAAOC,EAAUpB,WAAW,UAAUG,IAAIvF,EAAK+C,UAElD6C,MAAK,SAACc,GACH,OAAOA,EAAS/I,MAGxB,MAAM,IAAIgJ,MAAM,4BA/C2D,KAmDnF3C,WAAa,SAACrG,EAAgBqC,GAC1B,GAAIrC,GAAMqC,EAAM,CACZ,IAAIwG,EAAY,EAAKb,SAASR,UAE9B,OAAOqB,EACFpB,WAAW,EAAKA,YAChBG,IAAI5H,GACJJ,IAAI,CACDK,KAAMoC,EAAKpC,KACXkH,MAAO9E,EAAK8E,MACZyB,MAAOC,EAAUpB,WAAW,UAAUG,IAAIvF,EAAK+C,UAElD6C,MAAK,kBAAM,KAEhB,MAAM,IAAIe,MAAM,mBAjE2D,KAqEnF9J,WAAa,SAACc,GACV,OAAO,EAAKgI,SAAS1B,OAAO,EAAKmB,WAAYzH,GAAIiI,MAAK,kBAAM,QFzEjC,Y,aGNpB,SAASgB,KACpB,OAAOC,cCGI,SAASC,GACpBC,EACAC,GAEA,OAAOC,aAAY,SAAC9J,GAAD,OAAmB4J,EAAS5J,EAAO6J,M,mBCD3C,SAASE,GAAMC,GAC1B,OACI,sBAAKC,UAAU,QAAf,UACoB,YAAfD,EAAM9J,MACH,qCACI,cAAC,KAAD,CAAa+J,UAAU,gBAD3B,IAC6CD,EAAME,QAGvC,YAAfF,EAAM9J,MACH,qCACI,cAAC,KAAD,CAAa+J,UAAU,gBAD3B,IAC6CD,EAAME,WCbpD,SAASC,KACpB,IAAMC,EAAWX,KACXrK,EAAcuK,GAAkB7E,IAMtC,OAJAuF,qBAAU,WACND,EhBTH,CACGlK,KAAMC,MgBSP,CAACiK,IAEAhL,IAAgBJ,EAAW4E,KACpB,cAAC,GAAD,CAAO1D,KAAK,UAAUgK,KAAK,sIAC3B9K,IAAgBJ,EAAWiF,YAC3B,cAAC,GAAD,CAAO/D,KAAK,UAAUgK,KAAK,2KAG/B,6BCdI,SAASI,KACpB,IAAMF,EAAWX,KACXrK,EAAcuK,GAAkB5E,IAMtC,OAJAsF,qBAAU,WACND,EdTH,CACGlK,KAAMC,McSP,CAACiK,IAEAhL,IAAgBJ,EAAW4E,KACpB,cAAC,GAAD,CAAO1D,KAAK,UAAUgK,KAAK,8HAC3B9K,IAAgBJ,EAAWiF,YAC3B,cAAC,GAAD,CAAO/D,KAAK,UAAUgK,KAAK,mKAG/B,6B,MCXI,SAASK,GAAQP,GAC5B,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBD,EAAMQ,OAC7B,sBAAKP,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SAA6BD,EAAMS,aACnC,sBAAKR,UAAU,OAAf,UACI,qBAAKA,UAAU,UAAf,SAA0BD,EAAMU,UAChC,qBAAKT,UAAU,UAAf,SAA0BD,EAAMW,mB,mBCRrC,SAASC,GAAsBZ,GAC1C,IAAMa,EAAclB,GAAkBjE,GAA6BsE,EAAMpE,QAEzE,OAAIiF,EAAc,EACP,qBAAKZ,UAAU,wBAAf,SAAwCY,IAG5C,6B,MCHI,SAASC,GAAQd,GAC5B,IAAMtJ,EAAciJ,GAAkBxE,GAAoB6E,EAAMnI,KAAKnB,aAE/DqK,EACDf,EAAMnI,KAAKjB,YAAcoJ,EAAMnI,KAAKhB,uBAAyBN,EAAYM,qBAEpE,YADA,iBAAmBmJ,EAAMnI,KAAKrB,GAGxC,OACI,gCACI,sBAAKyJ,UAAW,WAAaD,EAAMnI,KAAKjB,WAAa,YAAc,IAAnE,UACI,qBAAKqJ,UAAU,kBAAf,SAAkCvJ,EAAYmF,KAAO,GAAK,cAAC,KAAD,MAC1D,eAAC,KAAD,CAAMmF,GAAID,EAASd,UAAU,OAA7B,UACI,qBAAKA,UAAU,OAAf,SAAuBD,EAAMnI,KAAKpB,OAClC,cAAC,GAAD,CAAuBmF,OAAQoE,EAAMnI,KAAKrB,WAIjDE,EAAYmF,KAAO,GAChB,qBAAKoE,UAAU,kBAAf,SACI,cAACgB,GAAD,CAAcrJ,MAAOlB,SC3B1B,SAASuK,GAAajB,GACjC,OACI,8BACKA,EAAMpI,MAAMsJ,WAAWlF,KAAI,SAACnE,GAAD,OACxB,cAAC,GAAD,CAASA,KAAMA,GAAWA,EAAKrB,S,MCLhC,SAAS2K,KACpB,IAAMC,EAAYzB,GAAkBtE,IAEpC,OAAI+F,GAAaA,EAAUvF,KAAO,EAE1B,qBAAKoE,UAAU,WAAf,SACI,cAACgB,GAAD,CAAcrJ,MAAOwJ,MAK1B,6B,MCNI,SAASC,GAAUrB,GAC9B,OAAIA,EAAMpI,OAASoI,EAAMpH,OAASoH,EAAMpI,MAAMiE,KAAO,GAAKmE,EAAMpH,MAAMiD,KAAO,EAErE,qBAAKoE,UAAU,YAAf,SACI,wBAAOA,UAAU,QAAjB,UACI,gCACI,qBAAIA,UAAU,OAAd,UACI,oBAAIA,UAAU,YAAd,uIACA,oBAAIA,UAAU,aAAd,0EACA,oBAAIA,UAAU,gBAAd,2FAGPD,EAAMpI,MAAMsJ,WAAWlF,KAAI,SAACnE,GAAD,OACxB,gCACKmI,EAAMpH,MACFwC,QAAO,SAACvC,GAAD,OAAUA,EAAK+C,SAAW/D,EAAKrB,MACtC0K,WACAlF,KAAI,SAACnD,GAAD,OACD,qBAAIoH,UAAU,OAAd,UACI,oBAAIA,UAAU,YAAd,SACI,cAAC,KAAD,CAAMe,GAAI,iBAAmBnI,EAAKrC,GAAlC,SAAuCqC,EAAKpC,SAEhD,oBAAIwJ,UAAU,aAAd,SAA4BpH,EAAK8E,QACjC,oBAAIsC,UAAU,gBAAd,SAA+BpI,EAAKpB,SALdoC,EAAKrC,QAL/BqB,EAAKrB,YAoB9B,qBAAKyJ,UAAU,WAAf,yG,MCpCI,SAASqB,GAAOtB,GAC3B,OACI,+CAASA,GAAT,IAAgBC,UAAW,UAAYD,EAAMC,UAA7C,SACKD,EAAMuB,Y,MCHJ,SAASC,GAAOxB,GAC3B,OACI,+CAASA,GAAT,IAAgBC,UAAW,UAAYD,EAAMC,UAA7C,SACKD,EAAMuB,YCEJ,SAASE,KACpB,IAAMrB,EAAWX,KACXrK,EAAcuK,GAAkB/E,IAChChD,EAAQ+H,GAAkB3E,IAC1BpC,EAAQ+G,GACV7D,GACAlE,EACKsJ,WACAlF,KAAI,SAACnE,GAAD,OAAUA,EAAKrB,MACnBkL,QAOT,OAJArB,qBAAU,WACND,EAAS9G,EAA+B,OACzC,CAAC8G,IAEAhL,EAAYC,YAAcL,EAAWgF,OAC9B,cAACmG,GAAD,IACA/K,EAAYG,YAAcP,EAAWgF,OACrC,cAACsG,GAAD,IAGP1I,EAEI,cAAC,GAAD,CACI4I,KAAM,mIACNC,WAAY,cAAC,GAAD,IACZC,QAAS,6BACTC,QACI,qCACI,cAAC,GAAD,0GACA,cAAC,GAAD,CAAW/I,MAAOA,EAAOgB,MAAOA,IAChC,eAAC,GAAD,uHAA6BA,EAAMiD,aAOhD,2C,MC5CI,SAAS8F,GAAa3B,GACjC,OAAIA,EAAM4B,MAEF,qBAAK3B,UAAU,eAAf,SACKD,EAAM4B,MAAM5F,KAAI,SAAC6F,GAAD,OACb,cAAC,KAAD,CAAMb,GAAIa,EAAKC,IAAf,SACKD,EAAKE,OADeF,EAAKC,IAAM,IAAMD,EAAKE,YAQxD,6BCCI,SAASC,KACpB,IAAM5B,EAAWX,KACXrK,EAAcuK,GAAkB/E,IAChCqH,EAAgBtC,GAAkBpE,IAChCK,EAAWsG,eAAXtG,OACF/D,EAAO8H,GAAkB1E,GAAkBW,GAEjDyE,qBAAU,WACFxI,GACAuI,EAAS9G,EAA+B,CAACzB,EAAKrB,QAEnD,CAAC4J,EAAUvI,IAEd,IAAMsK,EAAwBxC,GAAkB5D,IAEhD,GAAI3G,EAAYC,YAAcL,EAAWgF,OACrC,OAAO,cAACmG,GAAD,IACJ,GAAI/K,EAAYG,YAAcP,EAAWgF,OAC5C,OAAO,cAACsG,GAAD,IAGX,GAAIzI,EAAM,CACN,IAAI+J,EAAQ,GAcZ,OAZK/J,EAAKnB,aACNkL,EAAMxK,KAAK,CACP0K,IAAK,iBAAmBjK,EAAKrB,GAAK,eAClCuL,MACI,qCACI,cAAC,KAAD,IADJ,iIASR,cAAC,GAAD,CACIvB,KAAM,yHAAmB3I,EAAKpB,KAAxB,OACNgK,WAAY,cAAC,GAAD,IACZC,QAAS,cAAC,GAAD,CAAckB,MAAOA,IAC9BjB,QACI,qCACI,eAAC,GAAD,+FAAyB9I,EAAKpB,KAA9B,OACA,cAAC,GAAD,CAAWmB,MAAOqK,EAAerJ,MAAOuJ,IACxC,eAAC,GAAD,uHAA6BA,EAAsBtG,aAOvE,OAAO,2C,mBChEI,SAASuG,GAAOpC,GAC3B,OACI,kDAAYA,GAAZ,IAAmBC,UAAW,UAAYD,EAAMC,UAAhD,SACKD,EAAMuB,Y,MCEJ,SAASc,GAAWrC,GAC/B,OAAO,iDAAWA,GAAX,IAAkBC,UAAW,SAAWD,EAAMC,a,MCN1C,SAASqC,GAAMtC,GAC1B,IAAMuC,EAAaC,SAASC,eAAe,cAE3C,OAAIF,EACOG,IAASC,aACZ,qBAAKnM,GAAG,YAAYyJ,UAAU,QAA9B,SACI,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BD,EAAM4C,QAClC,sBAAMA,MAAM,QAAQ3C,UAAU,QAAQ4C,QAAS7C,EAAM8C,QAArD,qBAIJ,qBAAK7C,UAAU,YAAf,SAA4BD,EAAMuB,kBAI9CgB,GAEM,6B,MCNH,SAASQ,GAAS/C,GAC7B,IAAMI,EAAWX,KADmC,EAE5BuD,mBAAShD,EAAMnH,MAFa,oBAE7CA,EAF6C,KAEvCoK,EAFuC,KAG9CC,GAAkBC,YAAGtK,EAAMmH,EAAMnH,MACjCzD,EAAcuK,GAAkB/E,IAJc,EAKNoI,oBAAS,GALH,oBAK7CI,EAL6C,KAK5BC,EAL4B,KAWpD,OAJAhD,qBAAU,WACND,EAAS7G,EAAe,WAAY2J,EAAiBjO,EAAWQ,SAAWR,EAAW2H,UACvF,CAACwD,EAAU8C,IAGV,sBAAKjD,UAAU,YAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,QAAf,+DACA,qBAAKA,UAAU,QAAf,SACI,cAAC,GAAD,CAAY3J,MAAOuC,EAAKpC,KAAM6M,SAAU,SAACC,GAAD,OAAON,EAAQpK,EAAKzC,IAAI,OAAQmN,EAAEC,cAAclN,gBAGhG,sBAAK2J,UAAU,cAAf,UACI,qBAAKA,UAAU,QAAf,2EACA,qBAAKA,UAAU,QAAf,SACI,cAAC,GAAD,CACI3J,MAAOmN,OAAO5K,EAAK8E,OACnB2F,SAAU,SAACC,GAAD,OAAON,EAAQpK,EAAKzC,IAAI,QAAS+I,OAAOoE,EAAEC,cAAclN,UAClEJ,KAAK,SACLwN,IAAI,WAIhB,sBAAKzD,UAAU,UAAf,UACI,eAAC,GAAD,CAAQA,UAAU,aAAa4C,QAAS,kBAAM7C,EAAM2D,WAAW9K,IAA/D,WACMzD,EAAYI,WAAaP,EAAWQ,UAClCL,EAAYI,WAAaP,EAAWgF,cAAgB,cAAC,KAAD,IACvD7E,EAAYI,WAAaP,EAAW2H,OAAS,cAAC,KAAD,IAC7CxH,EAAYI,WAAaP,EAAWuH,MAAQ,cAAC,KAAD,CAAeyD,UAAU,kBAClD,WAAnBD,EAAM4D,UAAyB,mDACZ,SAAnB5D,EAAM4D,UAAuB,4DAEH,oBAAvB5D,EAAM6D,cACV,qCACKT,GACG,cAAC,GAAD,CAAOR,MAAM,uHAAwBE,QAAS,kBAAMO,GAAmB,IAAvE,SACI,sBAAKpD,UAAU,iBAAf,UACI,wBAAQ4C,QAAS,kBAAM7C,EAAM6D,aAAc7D,EAAMnH,KAAKrC,KAAtD,0BACA,wBAAQqM,QAAS,kBAAMQ,GAAmB,IAA1C,qCAKZ,eAAC,GAAD,CAAQpD,UAAU,eAAe4C,QAAS,kBAAMQ,GAAmB,IAAnE,UACI,cAAC,KAAD,IADJ,yDCjET,SAASS,GAAW9D,GAC/B,IAAMI,EAAWX,KAMjB,OAAO,cAAC,GAAD,CAAUmE,SAAS,SAAS/K,KAAMmH,EAAMnH,KAAM8K,WAJlC,SAAC9K,GAChBuH,E9BAkB,SAACvH,GAAD,MACrB,CACG3C,KAAMC,EACN0C,Q8BHS4D,CAAW5D,OCEb,SAASkL,KACpB,IAAM3O,EAAcuK,GAAkB/E,IAC9BgB,EAAWsG,eAAXtG,OACFoI,EAAerE,GAAkB1E,GAAkBW,GACnD/C,EAAOmL,EAAe,IAAIpG,GAAJ,2BAAcF,IAAd,IAA2B9B,OAAQoI,EAAaxN,WAAQG,EAEpF,GAAIvB,EAAYC,YAAcL,EAAWgF,OACrC,OAAO,cAACmG,GAAD,IACJ,GAAI/K,EAAYG,YAAcP,EAAWgF,OAC5C,OAAO,cAACsG,GAAD,IAGX,GAAIzH,GAAQmL,EAAc,CACtB,IAAMpC,EAAQ,CACV,CACIE,IAAK,iBAAmBkC,EAAaxN,GACrCuL,MACI,qCACI,cAAC,KAAD,IADJ,sCAQZ,OACI,cAAC,GAAD,CACIvB,KAAM,0KAA4BwD,EAAavN,KAAzC,OACNgK,WAAY,cAAC,GAAD,IACZC,QAAS,cAAC,GAAD,CAAckB,MAAOA,IAC9BjB,QACI,qCACI,eAAC,GAAD,gJAAkCqD,EAAavN,KAA/C,OACA,cAACqN,GAAD,CAAYjL,KAAMA,SAOtC,OAAO,2CC9CI,SAASoL,GAASjE,GAC7B,IAAMI,EAAWX,KAUjB,OAAO,cAAC,GAAD,CAAUmE,SAAS,OAAO/K,KAAMmH,EAAMnH,KAAM8K,WARhC,SAAC9K,GAChBuH,EhCYkB,SAAC5J,EAAgBqC,GAAjB,MACrB,CACG3C,KAAMC,EACNK,KACAqC,QgChBSgE,CAAWhE,EAAKrC,GAAIqC,KAO0CgL,aAJtD,SAACrN,GAClB4J,EhCqBkB,SAAC5J,GAAD,MACrB,CACGN,KAAMC,EACNK,MgCxBSd,CAAWc,OCEb,SAAS0N,KACpB,IAAM9O,EAAcuK,GAAkB/E,IAC9B8B,EAAWwF,eAAXxF,OAEF7D,EAAO8G,GAAkB1D,GAAkBS,GAC3CsH,EAAerE,GAAkB1E,GAAD,OAAmBpC,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAM+C,QACzDuI,EAAmBxE,GAAkBnE,IAE3C,GAAIpG,EAAYC,YAAcL,EAAWgF,OACrC,OAAO,cAACmG,GAAD,IACJ,GAAI/K,EAAYG,YAAcP,EAAWgF,OAC5C,OAAO,cAACsG,GAAD,IAGX,GAAIzH,GAAQmL,EAAc,CACtB,IAAIpC,EAAQ,CACR,CACIE,IAAK,iBAAmBkC,EAAaxN,GACrCuL,MACI,qCACI,cAAC,KAAD,IADJ,sDAEgBiC,EAAavN,KAF7B,SAoBZ,OAZI0N,GAAoBA,EAAiB3N,KAAOwN,EAAaxN,IACzDoL,EAAMwC,QAAQ,CACVtC,IAAK,iBAAmBqC,EAAiB3N,GACzCuL,MACI,qCACI,cAAC,KAAD,IADJ,sDAEgBoC,EAAiB1N,KAFjC,SASR,cAAC,GAAD,CACI+J,KAAM,iMAA+B3H,EAAKpC,KAApC,OACNgK,WAAY,cAAC,GAAD,IACZC,QAAS,cAAC,GAAD,CAAckB,MAAOA,IAC9BjB,QACI,qCACI,eAAC,GAAD,uKAAqC9H,EAAKpC,KAA1C,OACA,cAACwN,GAAD,CAAUpL,KAAMA,SAOpC,OAAO,2C,YChDIwL,I9BrBC3K,G8BqBD2K,GAhBf,WACI,OACI,qBAAKpE,UAAU,MAAf,SACI,eAAC,KAAD,WACI,cAAC,KAAD,CAAOqE,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,KAAD,CAAUvD,GAAG,eAEjB,cAAC,KAAD,CAAOsD,OAAK,EAACC,KAAK,WAAWC,UAAW/C,KACxC,cAAC,KAAD,CAAO6C,OAAK,EAACC,KAAK,wBAAwBC,UAAWxC,KACrD,cAAC,KAAD,CAAOsC,OAAK,EAACC,KAAK,oCAAoCC,UAAWT,KACjE,cAAC,KAAD,CAAOO,OAAK,EAACC,KAAK,wBAAwBC,UAAWN,WCRxDlL,GAAUyL,cACjBC,GAAiBC,cACjBC,GAAmBC,OAAOC,sCAAwCC,IAClEC,GAAQC,YACVC,EAAYlM,IACZ4L,GAAiBO,YAAgBT,GAAgBU,YAAiBpM,OAEtE0L,GAAeW,K/BdC3L,G+BcYA,G/BbxB,UAAO,SAAU4L,IAAV,iEACH,OADG,SACGC,YAAI,CAAC9L,GAASC,IAAW4C,GAAS5C,MADrC,oCAAU4L,Q+BerB5C,IAAS8C,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUT,MAAOA,GAAjB,SACI,cAAC,IAAD,CAAiBhM,QAASA,GAA1B,SACI,cAAC,GAAD,UAIZwJ,SAASC,eAAe,W","file":"static/js/main.6d71fa79.chunk.js","sourcesContent":["export enum loadStatus {\n    notLoaded,\n    load,\n    loaded,\n    errorServer,\n}\n","export enum saveStatus {\n    notSaved,\n    save,\n    saved,\n    errorServer,\n}\n","export enum deleteStatus {\n    notDeleted,\n    delete,\n    deleted,\n    errorServer,\n}\n","import { Record } from \"immutable\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport { saveStatus } from \"src/store/saveStatus\";\nimport { deleteStatus } from \"src/store/deleteStatus\";\n\nexport interface IMain {\n    statusAsync: { loadNodes: loadStatus; loadItems: loadStatus; saveItem: saveStatus; deleteItem: deleteStatus };\n}\n\nconst initialMain: IMain = {\n    statusAsync: {\n        loadNodes: loadStatus.notLoaded,\n        loadItems: loadStatus.notLoaded,\n        saveItem: saveStatus.notSaved,\n        deleteItem: deleteStatus.notDeleted,\n    },\n};\n\nexport default class Main extends Record(initialMain) {}\n","export const SET_STATUS_ASYNC = \"SET_STATUS_ASYNC\";\n","import { ActionTypesInfer } from \"src/store/actionTypes\";\nimport Main from \"src/models/main\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\n\nexport type TStoreMain = Main;\n\nconst reducer = (state: TStoreMain = new Main(), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.SET_STATUS_ASYNC:\n            return state.set(\"statusAsync\", { ...state.statusAsync, [action.status]: action.value });\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { Record } from \"immutable\";\nimport { TStoreNode } from \"src/store/nodes/reducer\";\n\nexport interface INode {\n    id: string;\n    name: string;\n    descendants?: this[\"id\"][];\n    isSelected?: boolean;\n    selectedByAncestorId?: this[\"id\"];\n}\n\nexport const initialNode: INode = {\n    id: \"\",\n    name: \"\",\n    descendants: undefined,\n    isSelected: false,\n    selectedByAncestorId: \"\",\n};\n\nexport const getIdsAllDescendants = (state: TStoreNode, ancestorId: Node[\"id\"]) => {\n    let result: Node[\"id\"][] = [];\n\n    const cascade = (ancestorId: Node[\"id\"]) => {\n        const ancestor = state.get(ancestorId);\n\n        if (ancestor && ancestor.descendants) {\n            result.push(...ancestor.descendants);\n            ancestor.descendants.forEach((descendantId) => cascade(descendantId));\n        }\n    };\n\n    cascade(ancestorId);\n\n    return result;\n};\n\nexport default class Node extends Record(initialNode) {}\n","export const LOAD_NODES = \"LOAD_NODES\";\nexport const LOAD_NODES_SUCCESS = \"LOAD_NODES_SUCCESS\";\nexport const SET_SELECTED_BY_IDS_REST_UNSELECTED = \"SET_SELECTED_BY_IDS_REST_UNSELECTED\";\n","import { Map } from \"immutable\";\nimport { ActionTypesInfer } from \"src/store/actionTypes\";\nimport Node, { getIdsAllDescendants, initialNode } from \"src/models/node\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\n\nexport type TStoreNode = Map<Node[\"id\"], Node>;\n\nconst reducer = (state: TStoreNode = Map(), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.LOAD_NODES_SUCCESS:\n            action.nodes.forEach((node: Node) => {\n                state = state.set(node.id, node);\n            });\n            return state;\n\n        case types.SET_SELECTED_BY_IDS_REST_UNSELECTED:\n            let selectedIds: Node[\"id\"][] = action.ids;\n\n            action.ids.forEach((ancestorId) => {\n                state = state\n                    .setIn([ancestorId, \"isSelected\"], true)\n                    .setIn([ancestorId, \"selectedByAncestorId\"], initialNode.selectedByAncestorId);\n\n                const descendantIds = getIdsAllDescendants(state, ancestorId);\n\n                descendantIds.forEach((descendantId) => {\n                    state = state\n                        .setIn([descendantId, \"isSelected\"], true)\n                        .setIn([descendantId, \"selectedByAncestorId\"], ancestorId);\n                });\n\n                selectedIds = selectedIds.concat(descendantIds);\n            });\n\n            // unselected for the rest\n            state.forEach((node: Node) => {\n                if (!selectedIds.includes(node.id)) {\n                    if (node.isSelected !== initialNode.isSelected)\n                        state = state.setIn([node.id, \"isSelected\"], initialNode.isSelected);\n\n                    if (node.selectedByAncestorId !== initialNode.selectedByAncestorId)\n                        state = state.setIn([node.id, \"selectedByAncestorId\"], initialNode.selectedByAncestorId);\n                }\n            });\n\n            return state;\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","export const LOAD_ITEMS = \"LOAD_ITEMS \";\nexport const LOAD_ITEMS_SUCCESS = \"LOAD_ITEMS_SUCCESS\";\nexport const CREATE_ITEM = \"CREATE_ITEM\";\nexport const CREATE_ITEM_SUCCESS = \"CREATE_ITEM_SUCCESS\";\nexport const UPDATE_ITEM = \"UPDATE_ITEM\";\nexport const UPDATE_ITEM_SUCCESS = \"UPDATE_ITEM_SUCCESS\";\nexport const DELETE_ITEM = \"DELETE_ITEM\";\nexport const DELETE_ITEM_SUCCESS = \"DELETE_ITEM_SUCCESS\";\n","import { Map } from \"immutable\";\nimport { ActionTypesInfer } from \"src/store/actionTypes\";\nimport Item from \"src/models/item\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\n\nexport type TStoreItem = Map<Item[\"id\"], Item>;\n\nconst reducer = (state: TStoreItem = Map(), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.LOAD_ITEMS_SUCCESS:\n            action.items.forEach((item: Item) => {\n                state = state.set(item.id, item);\n            });\n            return state;\n\n        case types.CREATE_ITEM_SUCCESS:\n        case types.UPDATE_ITEM_SUCCESS:\n            return state.set(action.item.id, action.item);\n\n        case types.DELETE_ITEM_SUCCESS:\n            return state.remove(action.id);\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { History, LocationState } from \"history\";\nimport main, { TStoreMain } from \"src/store/main/reducer\";\nimport nodes, { TStoreNode } from \"src/store/nodes/reducer\";\nimport items, { TStoreItem } from \"src/store/item/reducer\";\n\nexport interface IStore {\n    router: typeof connectRouter;\n    main: TStoreMain;\n    nodes: TStoreNode;\n    items: TStoreItem;\n}\n\nconst createRootReducer = (history: History<LocationState>) =>\n    combineReducers({\n        router: connectRouter(history),\n        main,\n        nodes,\n        items,\n    });\n\nexport default createRootReducer;\n","import * as types from \"./types\";\nimport Node from \"src/models/node\";\n\nexport const loadNodes = () =>\n    ({\n        type: types.LOAD_NODES,\n    } as const);\n\nexport const loadNodesSuccess = (nodes: Node[]) =>\n    ({\n        type: types.LOAD_NODES_SUCCESS,\n        nodes,\n    } as const);\n\nexport const setSelectedByIdsRestUnselected = (ids: Node[\"id\"][]) =>\n    ({\n        type: types.SET_SELECTED_BY_IDS_REST_UNSELECTED,\n        ids,\n    } as const);\n","import * as types from \"./types\";\nimport Main from \"src/models/main\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport { saveStatus } from \"src/store/saveStatus\";\nimport { deleteStatus } from \"src/store/deleteStatus\";\n\nexport const setStatusAsync = (status: keyof Main[\"statusAsync\"], value: loadStatus | saveStatus | deleteStatus) =>\n    ({\n        type: types.SET_STATUS_ASYNC,\n        status,\n        value,\n    } as const);\n","import bottle from \"src/services\";\nimport { call, put, takeEvery } from \"@redux-saga/core/effects\";\nimport * as types from \"./types\";\nimport { loadNodesSuccess } from \"./actions\";\nimport { setStatusAsync } from \"src/store/main/actions\";\nimport { loadStatus } from \"src/store/loadStatus\";\n\nfunction* loadNodesAsync(services: typeof bottle) {\n    try {\n        yield put(setStatusAsync(\"loadNodes\", loadStatus.load));\n        const nodes = yield call(services.container.ApiNode.loadNodes);\n        yield put(loadNodesSuccess(nodes));\n        yield put(setStatusAsync(\"loadNodes\", loadStatus.loaded));\n    } catch (e) {\n        yield put(setStatusAsync(\"loadNodes\", loadStatus.errorServer));\n        console.error(\"Server error while loading nodes!\");\n        console.error(e);\n    }\n}\n\nexport default function* nodeSaga(services: typeof bottle) {\n    yield takeEvery(types.LOAD_NODES, loadNodesAsync, services);\n}\n","import * as types from \"./types\";\nimport Item from \"src/models/item\";\n\nexport const loadItems = () =>\n    ({\n        type: types.LOAD_ITEMS,\n    } as const);\n\nexport const loadItemsSuccess = (items: Item[]) =>\n    ({\n        type: types.LOAD_ITEMS_SUCCESS,\n        items,\n    } as const);\n\nexport const createItem = (item: Item) =>\n    ({\n        type: types.CREATE_ITEM,\n        item,\n    } as const);\n\nexport const createItemSuccess = (item: Item) =>\n    ({\n        type: types.CREATE_ITEM_SUCCESS,\n        item,\n    } as const);\n\nexport const updateItem = (id: Item[\"id\"], item: Item) =>\n    ({\n        type: types.UPDATE_ITEM,\n        id,\n        item,\n    } as const);\n\nexport const updateItemSuccess = (id: Item[\"id\"], item: Item) =>\n    ({\n        type: types.UPDATE_ITEM_SUCCESS,\n        item,\n    } as const);\n\nexport const deleteItem = (id: Item[\"id\"]) =>\n    ({\n        type: types.DELETE_ITEM,\n        id,\n    } as const);\n\nexport const deleteItemSuccess = (id: Item[\"id\"]) =>\n    ({\n        type: types.DELETE_ITEM_SUCCESS,\n        id,\n    } as const);\n","import { createSelector } from \"reselect\";\nimport { IStore } from \"src/store/rootReducer\";\nimport { getStatusAsync, getStatusItemsAsync, getStatusNodesAsync } from \"src/store/main/selectors\";\nimport Node, { getIdsAllDescendants, initialNode } from \"src/models/node\";\nimport Item from \"src/models/item\";\n\nconst propsFirstSelector = (_: IStore, prop: any) => prop;\n\nexport const mainState = (state: Readonly<IStore>) => state.main;\nexport const mainGetStatusAsync = createSelector(mainState, getStatusAsync);\nexport const mainGetStatusLoadNodesAsync = createSelector(mainState, getStatusNodesAsync);\nexport const mainGetStatusLoadItemsAsync = createSelector(mainState, getStatusItemsAsync);\n\nexport const nodeState = (state: Readonly<IStore>) => state.nodes;\nexport const nodesGetNodeById = createSelector(nodeState, propsFirstSelector, (nodes, id) => {\n    return nodes.find((node) => node.id === id);\n});\nexport const nodesGetNodesByIds = createSelector(nodeState, propsFirstSelector, (nodes, ids) => {\n    return nodes.filter((node) => (ids ? ids.includes(node.id) : false));\n});\nexport const nodesGetRootNodes = createSelector(nodeState, (nodes) => {\n    const descendants = nodes.reduce((result: Node[\"id\"][], node) => {\n        if (node.descendants) return result.concat(node.descendants);\n\n        return result;\n    }, []);\n\n    return nodes.filter((node) => !descendants.includes(node.id));\n});\nexport const nodesGetSelectedNodes = createSelector(nodeState, (nodes) => {\n    return nodes.filter((node) => node.isSelected);\n});\nexport const nodesGetMainSelectedNode = createSelector(nodesGetSelectedNodes, (nodes) =>\n    nodes.find((node) => node.selectedByAncestorId === initialNode.selectedByAncestorId)\n);\n\nexport const itemState = (state: Readonly<IStore>) => state.items;\nexport const itemsGetNumberItemsByNodeId = createSelector(\n    (state: Readonly<IStore>) => state,\n    propsFirstSelector,\n    (state, id: Node[\"id\"]) => {\n        let nodeIds = getIdsAllDescendants(state.nodes, id);\n        nodeIds.push(id);\n\n        return state.items.filter((item) => (item.nodeId ? nodeIds.includes(item.nodeId) : false)).size;\n    }\n);\nexport const itemsGetItemsByNodeIds = createSelector(itemState, propsFirstSelector, (items, ids: Node[\"id\"][]) => {\n    return items.filter((item) => (item.nodeId ? ids.includes(item.nodeId) : false));\n});\nexport const itemsGetItemsForSelectedNodes = (state: Readonly<IStore>) => {\n    const nodeIds = state.nodes.filter((node) => node.isSelected).map((node) => node.id);\n\n    return state.items.filter((item) => (item.nodeId ? nodeIds.includes(item.nodeId) : false));\n};\nexport const itemsGetItemById = createSelector(itemState, propsFirstSelector, (items, id: Item[\"id\"]) => {\n    return items.find((item) => item.id === id);\n});\n","import { TStoreMain } from \"./reducer\";\n\nexport const getStatusAsync = (state: TStoreMain) => state.statusAsync;\nexport const getStatusNodesAsync = (state: TStoreMain) => state.statusAsync.loadNodes;\nexport const getStatusItemsAsync = (state: TStoreMain) => state.statusAsync.loadItems;\n","import bottle from \"src/services\";\nimport { call, put, select, takeEvery } from \"@redux-saga/core/effects\";\nimport { push } from \"connected-react-router\";\nimport * as types from \"./types\";\nimport {\n    createItem,\n    createItemSuccess,\n    loadItemsSuccess,\n    updateItem,\n    updateItemSuccess,\n    deleteItem,\n    deleteItemSuccess,\n} from \"./actions\";\nimport { setStatusAsync } from \"src/store/main/actions\";\nimport { itemsGetItemById } from \"src/store/rootSelector\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport { saveStatus } from \"src/store/saveStatus\";\nimport { deleteStatus } from \"src/store/deleteStatus\";\n\nfunction* loadItemsAsync(services: typeof bottle) {\n    try {\n        yield put(setStatusAsync(\"loadItems\", loadStatus.load));\n        const items = yield call(services.container.ApiItem.loadItems);\n        yield put(loadItemsSuccess(items));\n        yield put(setStatusAsync(\"loadItems\", loadStatus.loaded));\n    } catch (e) {\n        yield put(setStatusAsync(\"loadItems\", loadStatus.errorServer));\n        console.error(\"Server error while loading items!\");\n        console.error(e);\n    }\n}\n\nfunction* createItemAsync(services: typeof bottle, action: ReturnType<typeof createItem>) {\n    try {\n        yield put(setStatusAsync(\"saveItem\", saveStatus.save));\n        const itemId = yield call(services.container.ApiItem.createItem, action.item);\n        const item = yield call(services.container.ApiItem.loadItem, itemId);\n        yield put(createItemSuccess(item));\n        yield put(setStatusAsync(\"saveItem\", saveStatus.saved));\n        yield put(push(\"/catalog/item/\" + item.id));\n    } catch (e) {\n        yield put(setStatusAsync(\"saveItem\", saveStatus.errorServer));\n        console.error(\"Server error while creating items!\");\n        console.error(e);\n    }\n}\n\nfunction* updateItemAsync(services: typeof bottle, action: ReturnType<typeof updateItem>) {\n    try {\n        yield put(setStatusAsync(\"saveItem\", saveStatus.save));\n        yield call(services.container.ApiItem.updateItem, action.id, action.item);\n        const item = yield call(services.container.ApiItem.loadItem, action.id);\n        yield put(updateItemSuccess(action.id, item));\n        yield put(setStatusAsync(\"saveItem\", saveStatus.saved));\n    } catch (e) {\n        yield put(setStatusAsync(\"saveItem\", saveStatus.errorServer));\n        console.error(\"Server error while updating item!\");\n        console.error(e);\n    }\n}\n\nfunction* deleteItemAsync(services: typeof bottle, action: ReturnType<typeof deleteItem>) {\n    try {\n        yield put(setStatusAsync(\"deleteItem\", deleteStatus.delete));\n        const item = yield select(itemsGetItemById, action.id);\n        yield call(services.container.ApiItem.deleteItem, action.id);\n        yield put(deleteItemSuccess(action.id));\n        yield put(setStatusAsync(\"deleteItem\", deleteStatus.deleted));\n        yield put(push(\"/catalog/node/\" + item.nodeId));\n    } catch (e) {\n        yield put(setStatusAsync(\"deleteItem\", deleteStatus.errorServer));\n        console.error(\"Server error while deleting item!\");\n        console.error(e);\n    }\n}\n\nexport default function* itemSaga(services: typeof bottle) {\n    yield takeEvery(types.LOAD_ITEMS, loadItemsAsync, services);\n    yield takeEvery(types.CREATE_ITEM, createItemAsync, services);\n    yield takeEvery(types.UPDATE_ITEM, updateItemAsync, services);\n    yield takeEvery(types.DELETE_ITEM, deleteItemAsync, services);\n}\n","import { all } from \"redux-saga/effects\";\nimport Bottle from \"bottlejs\";\nimport nodeSaga from \"src/store/nodes/saga\";\nimport itemSaga from \"src/store/item/saga\";\n\nexport default (services: Bottle) => {\n    return function* rootSaga() {\n        yield all([nodeSaga(services), itemSaga(services)]);\n    };\n};\n","import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport { IFirebase } from \"./IFirebase\";\n\nexport default class Firebase implements IFirebase {\n    firestore;\n\n    constructor() {\n        app.initializeApp(configFirebase);\n        this.firestore = app.firestore();\n    }\n\n    get = (collection: string) => this.request(collection).get();\n\n    getOne = (collection: string, id: string) => this.request(collection).doc(id).get();\n\n    delete = (collection: string, id: string) => this.request(collection).doc(id).delete();\n\n    request = (collection: string) => this.firestore.collection(collection);\n}\n\nconst configFirebase = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n","import { Record } from \"immutable\";\nimport { INode } from \"./node\";\n\nexport interface IItem {\n    id: string;\n    name: string;\n    count: number;\n    nodeId?: INode[\"id\"];\n}\n\nexport const initialItem: IItem = {\n    id: \"\",\n    name: \"\",\n    count: 1,\n    nodeId: \"\",\n};\n\nexport default class Item extends Record(initialItem) {}\n","import Bottle from \"bottlejs\";\nimport Firebase from \"./firebase\";\nimport ApiNode from \"src/services/api/apiNode\";\nimport ApiItem from \"src/services/api/apiItem\";\n\nlet bottle = new Bottle();\n\nexport default bottle;\nbottle.service(\"Firebase\", Firebase);\nbottle.service(\"ApiNode\", ApiNode, \"Firebase\");\nbottle.service(\"ApiItem\", ApiItem, \"Firebase\");\n\ndeclare module \"bottlejs\" {\n    interface IContainer {\n        ApiNode: ApiNode;\n        ApiItem: ApiItem;\n    }\n}\n","import { IFirebase } from \"src/services/IFirebase\";\nimport Node from \"src/models/node\";\n\nexport interface IReadApiNode {\n    docs: {\n        id: string;\n        data(): { name: string; parts?: { id: string }[] };\n    }[];\n}\n\nexport default class ApiNode {\n    constructor(private firebase: IFirebase, private collection: string = \"places\") {}\n\n    loadNodes = () => {\n        return this.firebase.get(this.collection).then((apiNodes: IReadApiNode) => {\n            return apiNodes.docs.map((apiNode) => {\n                return new Node({\n                    id: apiNode.id,\n                    name: apiNode.data().name,\n                    descendants: apiNode.data().parts?.map((part) => part.id),\n                });\n            });\n        });\n    };\n}\n","import { IFirebase } from \"src/services/IFirebase\";\nimport Item from \"src/models/item\";\n\nexport interface IReadApiItem {\n    id: string;\n    data(): {\n        name: string;\n        count: string | number;\n        place?: { id: string };\n    };\n}\n\nexport default class ApiItem {\n    constructor(private firebase: IFirebase, private collection: string = \"inventory\") {}\n\n    loadItems = () => {\n        return this.firebase.get(this.collection).then((apiItems: { docs: IReadApiItem[] }) => {\n            return apiItems.docs\n                .map((apiItem) => {\n                    if (apiItem.id.length > 0 && Number(apiItem.data().count) > 0) {\n                        return new Item({\n                            id: apiItem.id,\n                            nodeId: apiItem.data().place?.id,\n                            name: apiItem.data().name,\n                            count: Number(apiItem.data().count),\n                        });\n                    }\n\n                    return undefined;\n                })\n                .filter((apiItem) => apiItem);\n        });\n    };\n\n    loadItem = (id: Item[\"id\"]) => {\n        return this.firebase.getOne(this.collection, id).then((apiItem: IReadApiItem) => {\n            return new Item({\n                id: apiItem.id,\n                nodeId: apiItem.data().place?.id,\n                name: apiItem.data().name,\n                count: Number(apiItem.data().count),\n            });\n        });\n    };\n\n    createItem = (item: Item) => {\n        if (item.nodeId) {\n            let filestore = this.firebase.firestore;\n\n            return filestore\n                .collection(this.collection)\n                .add({\n                    name: item.name,\n                    count: item.count,\n                    place: filestore.collection(\"places\").doc(item.nodeId),\n                })\n                .then((response: any) => {\n                    return response.id;\n                });\n        } else {\n            throw new Error(\"Not found ancestor node\");\n        }\n    };\n\n    updateItem = (id: Item[\"id\"], item: Item) => {\n        if (id && item) {\n            let filestore = this.firebase.firestore;\n\n            return filestore\n                .collection(this.collection)\n                .doc(id)\n                .set({\n                    name: item.name,\n                    count: item.count,\n                    place: filestore.collection(\"places\").doc(item.nodeId),\n                })\n                .then(() => true);\n        } else {\n            throw new Error(\"Not found item\");\n        }\n    };\n\n    deleteItem = (id: Item[\"id\"]) => {\n        return this.firebase.delete(this.collection, id).then(() => true);\n    };\n}\n","import { useDispatch } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { allActionsTypes } from \"src/store/actionTypes\";\n\nexport default function useCustomDispatch() {\n    return useDispatch<Dispatch<allActionsTypes>>();\n}\n","import { useSelector } from \"react-redux\";\nimport { IStore } from \"src/store/rootReducer\";\nimport * as rootSelector from \"src/store/rootSelector\";\n\ntype InferSelectorFunctionsTypes<T> = T extends { [key: string]: infer U } ? U : never;\n\ntype InferredTypes = InferSelectorFunctionsTypes<typeof rootSelector>;\n\nexport default function useCustomSelector<T extends InferredTypes>(\n    selector: T,\n    arg?: number | string | number[] | string[]\n) {\n    return useSelector((state: IStore) => selector(state, arg) as ReturnType<T>);\n}\n","import React from \"react\";\nimport { FaTimesCircle as WarningIcon } from \"react-icons/fa\";\nimport { FaSpinner as PreloadIcon } from \"react-icons/fa\";\n\nimport \"./Alert.scss\";\n\ninterface IAlertProps {\n    type: \"preload\" | \"warning\";\n    text: string;\n}\n\nexport default function Alert(props: IAlertProps) {\n    return (\n        <div className=\"alert\">\n            {props.type === \"preload\" && (\n                <>\n                    <PreloadIcon className=\"preloadIcon\" /> {props.text}\n                </>\n            )}\n            {props.type === \"warning\" && (\n                <>\n                    <WarningIcon className=\"warningIcon\" /> {props.text}\n                </>\n            )}\n        </div>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { mainGetStatusLoadNodesAsync } from \"src/store/rootSelector\";\nimport { loadNodes } from \"src/store/nodes/actions\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport Alert from \"src/component/Alert/Alert\";\n\nexport default function LoadNodes() {\n    const dispatch = useCustomDispatch();\n    const statusAsync = useCustomSelector(mainGetStatusLoadNodesAsync);\n\n    useEffect(() => {\n        dispatch(loadNodes());\n    }, [dispatch]);\n\n    if (statusAsync === loadStatus.load) {\n        return <Alert type=\"preload\" text=\"Загрузка зданий и комнат\" />;\n    } else if (statusAsync === loadStatus.errorServer) {\n        return <Alert type=\"warning\" text=\"Ошибка загрузки зданий и комнат\" />;\n    }\n\n    return <></>;\n}\n","import React, { useEffect } from \"react\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { mainGetStatusLoadItemsAsync } from \"src/store/rootSelector\";\nimport { loadItems } from \"src/store/item/actions\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport Alert from \"src/component/Alert/Alert\";\n\nexport default function LoadItems() {\n    const dispatch = useCustomDispatch();\n    const statusAsync = useCustomSelector(mainGetStatusLoadItemsAsync);\n\n    useEffect(() => {\n        dispatch(loadItems());\n    }, [dispatch]);\n\n    if (statusAsync === loadStatus.load) {\n        return <Alert type=\"preload\" text=\"Загрузка оборудования\" />;\n    } else if (statusAsync === loadStatus.errorServer) {\n        return <Alert type=\"warning\" text=\"Ошибка загрузки оборудования\" />;\n    }\n\n    return <></>;\n}\n","import React, { ReactNode } from \"react\";\n\nimport \"./Catalog.scss\";\n\ninterface ICatalogProps {\n    head: ReactNode;\n    navigation: ReactNode;\n    control: ReactNode;\n    content: ReactNode;\n}\n\nexport default function Catalog(props: ICatalogProps) {\n    return (\n        <div className=\"catalog\">\n            <div className=\"head\">{props.head}</div>\n            <div className=\"body\">\n                <div className=\"navigation\">{props.navigation}</div>\n                <div className=\"main\">\n                    <div className=\"control\">{props.control}</div>\n                    <div className=\"content\">{props.content}</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport Node from \"src/models/node\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { itemsGetNumberItemsByNodeId } from \"src/store/rootSelector\";\n\nimport \"./AvailabilityItemsIcon.scss\";\n\ninterface IIconNumberItemsProps {\n    nodeId: Node[\"id\"];\n}\n\nexport default function AvailabilityItemsIcon(props: IIconNumberItemsProps) {\n    const numberItems = useCustomSelector(itemsGetNumberItemsByNodeId, props.nodeId);\n\n    if (numberItems > 0) {\n        return <div className=\"availabilityItemsIcon\">{numberItems}</div>;\n    }\n\n    return <></>;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Node, { initialNode } from \"src/models/node\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { nodesGetNodesByIds } from \"src/store/rootSelector\";\nimport AvailabilityItemsIcon from \"./AvailabilityItemsIcon/AvailabilityItemsIcon\";\nimport ListElements from \"../ListElements/ListElements\";\nimport { FaSortDown as OpenedDescendantsIcon } from \"react-icons/fa\";\n\nimport \"./Element.scss\";\n\ninterface IElementProps {\n    node: Node;\n}\n\nexport default function Element(props: IElementProps) {\n    const descendants = useCustomSelector(nodesGetNodesByIds, props.node.descendants);\n\n    const nodeUrl =\n        !props.node.isSelected || props.node.selectedByAncestorId !== initialNode.selectedByAncestorId\n            ? \"/catalog/node/\" + props.node.id\n            : \"/catalog/\";\n\n    return (\n        <div>\n            <div className={\"element\" + (props.node.isSelected ? \" selected\" : \"\")}>\n                <div className=\"descendantsIcon\">{descendants.size > 0 && <OpenedDescendantsIcon />}</div>\n                <Link to={nodeUrl} className=\"link\">\n                    <div className=\"name\">{props.node.name}</div>\n                    <AvailabilityItemsIcon nodeId={props.node.id} />\n                </Link>\n            </div>\n\n            {descendants.size > 0 && (\n                <div className=\"listDescendants\">\n                    <ListElements nodes={descendants} />\n                </div>\n            )}\n        </div>\n    );\n}\n","import React from \"react\";\nimport { TStoreNode } from \"src/store/nodes/reducer\";\nimport Element from \"../Element/Element\";\n\ninterface IListNodesProps {\n    nodes: TStoreNode;\n}\n\nexport default function ListElements(props: IListNodesProps) {\n    return (\n        <div>\n            {props.nodes.valueSeq().map((node) => (\n                <Element node={node} key={node.id} />\n            ))}\n        </div>\n    );\n}\n","import React from \"react\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { nodesGetRootNodes } from \"src/store/rootSelector\";\nimport ListElements from \"./ListElements/ListElements\";\n\nimport \"./TreeView.scss\";\n\nexport default function TreeView() {\n    const rootNodes = useCustomSelector(nodesGetRootNodes);\n\n    if (rootNodes && rootNodes.size > 0) {\n        return (\n            <div className=\"treeView\">\n                <ListElements nodes={rootNodes} />\n            </div>\n        );\n    }\n\n    return <></>;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TStoreNode } from \"src/store/nodes/reducer\";\nimport { TStoreItem } from \"src/store/item/reducer\";\n\nimport \"./ListItems.scss\";\n\ninterface IListItemsProps {\n    nodes: TStoreNode;\n    items: TStoreItem;\n}\n\nexport default function ListItems(props: IListItemsProps) {\n    if (props.nodes && props.items && props.nodes.size > 0 && props.items.size > 0) {\n        return (\n            <div className=\"listItems\">\n                <table className=\"items\">\n                    <thead>\n                        <tr className=\"head\">\n                            <td className=\"cell name\">Название оборудования</td>\n                            <td className=\"cell count\">Количество</td>\n                            <td className=\"cell nodeName\">Расположение</td>\n                        </tr>\n                    </thead>\n                    {props.nodes.valueSeq().map((node) => (\n                        <tbody key={node.id}>\n                            {props.items\n                                .filter((item) => item.nodeId === node.id)\n                                .valueSeq()\n                                .map((item) => (\n                                    <tr className=\"item\" key={item.id}>\n                                        <td className=\"cell name\">\n                                            <Link to={\"/catalog/item/\" + item.id}>{item.name}</Link>\n                                        </td>\n                                        <td className=\"cell count\">{item.count}</td>\n                                        <td className=\"cell nodeName\">{node.name}</td>\n                                    </tr>\n                                ))}\n                        </tbody>\n                    ))}\n                </table>\n            </div>\n        );\n    }\n\n    return <div className=\"notFound\">Оборудования нет</div>;\n}\n","import React, { ReactNode } from \"react\";\n\nimport \"./Header.scss\";\n\ninterface IHeaderProps {\n    className?: string;\n    children?: ReactNode;\n}\n\nexport default function Header(props: IHeaderProps) {\n    return (\n        <div {...props} className={\"header \" + props.className}>\n            {props.children}\n        </div>\n    );\n}\n","import React, { ReactNode } from \"react\";\n\nimport \"./Footer.scss\";\n\ninterface IFooterProps {\n    className?: string;\n    children?: ReactNode;\n}\n\nexport default function Footer(props: IFooterProps) {\n    return (\n        <div {...props} className={\"footer \" + props.className}>\n            {props.children}\n        </div>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { setSelectedByIdsRestUnselected } from \"src/store/nodes/actions\";\nimport { mainGetStatusAsync, nodeState, itemsGetItemsByNodeIds } from \"src/store/rootSelector\";\nimport LoadNodes from \"src/component/Loading/LoadNodes\";\nimport LoadItems from \"src/component/Loading/LoadItems\";\nimport Catalog from \"src/component/Catalog/Catalog\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport TreeView from \"src/component/TreeView/TreeView\";\nimport ListItems from \"src/component/ListItems/ListItems\";\nimport Header from \"src/component/UI/Header/Header\";\nimport Footer from \"src/component/UI/Footer/Footer\";\n\nexport default function MainPage() {\n    const dispatch = useCustomDispatch();\n    const statusAsync = useCustomSelector(mainGetStatusAsync);\n    const nodes = useCustomSelector(nodeState);\n    const items = useCustomSelector(\n        itemsGetItemsByNodeIds,\n        nodes\n            .valueSeq()\n            .map((node) => node.id)\n            .toJS()\n    );\n\n    useEffect(() => {\n        dispatch(setSelectedByIdsRestUnselected([]));\n    }, [dispatch]);\n\n    if (statusAsync.loadNodes !== loadStatus.loaded) {\n        return <LoadNodes />;\n    } else if (statusAsync.loadItems !== loadStatus.loaded) {\n        return <LoadItems />;\n    }\n\n    if (nodes) {\n        return (\n            <Catalog\n                head={<>Всё оборудование</>}\n                navigation={<TreeView />}\n                control={<></>}\n                content={\n                    <>\n                        <Header>Всё оборудование</Header>\n                        <ListItems nodes={nodes} items={items} />\n                        <Footer>Всего оборудования: {items.size}</Footer>\n                    </>\n                }\n            />\n        );\n    }\n\n    return <>404</>;\n}\n","import React, { ReactNode } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./ControlPanel.scss\";\n\ninterface IControlPanelProps {\n    links?: { url: string; label: ReactNode }[];\n}\n\nexport default function ControlPanel(props: IControlPanelProps) {\n    if (props.links) {\n        return (\n            <div className=\"controlPanel\">\n                {props.links.map((link) => (\n                    <Link to={link.url} key={link.url + \"-\" + link.label}>\n                        {link.label}\n                    </Link>\n                ))}\n            </div>\n        );\n    }\n\n    return <></>;\n}\n","import React, { useEffect } from \"react\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { useParams } from \"react-router\";\nimport { setSelectedByIdsRestUnselected } from \"src/store/nodes/actions\";\nimport {\n    mainGetStatusAsync,\n    nodesGetSelectedNodes,\n    nodesGetNodeById,\n    itemsGetItemsForSelectedNodes,\n} from \"src/store/rootSelector\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport { INodeUrl } from \"src/App\";\nimport LoadNodes from \"src/component/Loading/LoadNodes\";\nimport LoadItems from \"src/component/Loading/LoadItems\";\nimport Catalog from \"src/component/Catalog/Catalog\";\nimport TreeView from \"src/component/TreeView/TreeView\";\nimport ControlPanel from \"src/component/ControlPanel/ControlPanel\";\nimport ListItems from \"src/component/ListItems/ListItems\";\nimport Header from \"src/component/UI/Header/Header\";\nimport Footer from \"src/component/UI/Footer/Footer\";\nimport { FaPlus as AddButtonIcon } from \"react-icons/fa\";\n\nexport default function NodePage() {\n    const dispatch = useCustomDispatch();\n    const statusAsync = useCustomSelector(mainGetStatusAsync);\n    const selectedNodes = useCustomSelector(nodesGetSelectedNodes);\n    const { nodeId } = useParams<INodeUrl>();\n    const node = useCustomSelector(nodesGetNodeById, nodeId);\n\n    useEffect(() => {\n        if (node) {\n            dispatch(setSelectedByIdsRestUnselected([node.id]));\n        }\n    }, [dispatch, node]);\n\n    const itemsForSelectedNodes = useCustomSelector(itemsGetItemsForSelectedNodes);\n\n    if (statusAsync.loadNodes !== loadStatus.loaded) {\n        return <LoadNodes />;\n    } else if (statusAsync.loadItems !== loadStatus.loaded) {\n        return <LoadItems />;\n    }\n\n    if (node) {\n        let links = [];\n\n        if (!node.descendants) {\n            links.push({\n                url: \"/catalog/node/\" + node.id + \"/create_item\",\n                label: (\n                    <>\n                        <AddButtonIcon />\n                        Добавить оборудование\n                    </>\n                ),\n            });\n        }\n\n        return (\n            <Catalog\n                head={<>Оборудование в \"{node.name}\"</>}\n                navigation={<TreeView />}\n                control={<ControlPanel links={links} />}\n                content={\n                    <>\n                        <Header>Оборудование в \"{node.name}\"</Header>\n                        <ListItems nodes={selectedNodes} items={itemsForSelectedNodes} />\n                        <Footer>Всего оборудования: {itemsForSelectedNodes.size}</Footer>\n                    </>\n                }\n            />\n        );\n    }\n\n    return <>404</>;\n}\n","import React, { MouseEvent, ReactNode } from \"react\";\n\nimport \"./Button.scss\";\n\ninterface IButtonProps {\n    className?: string;\n    children?: ReactNode;\n    onClick?: (e: MouseEvent<HTMLButtonElement>) => void;\n    disabled?: boolean;\n}\n\nexport default function Button(props: IButtonProps) {\n    return (\n        <button {...props} className={\"button \" + props.className}>\n            {props.children}\n        </button>\n    );\n}\n","import React, { ChangeEvent } from \"react\";\n\nimport \"./FieldInput.scss\";\n\ninterface IFieldInputProps {\n    className?: string;\n    value?: string;\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n    placeholder?: string;\n    type?: string;\n    autoComplete?: string;\n    id?: string;\n    min?: string;\n    max?: string;\n}\n\nexport default function FieldInput(props: IFieldInputProps) {\n    return <input {...props} className={\"input \" + props.className} />;\n}\n","import React, { ReactNode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./Modal.scss\";\n\ninterface IModalProps {\n    title: string;\n    onClose(): void;\n    children: ReactNode;\n}\n\nexport default function Modal(props: IModalProps) {\n    const domElement = document.getElementById(\"modal-root\");\n\n    if (domElement) {\n        return ReactDOM.createPortal(\n            <div id=\"openModal\" className=\"modal\">\n                <div className=\"modalDialog\">\n                    <div className=\"modalContent\">\n                        <div className=\"modal-header\">\n                            <h3 className=\"modalTitle\">{props.title}</h3>\n                            <span title=\"Close\" className=\"close\" onClick={props.onClose}>\n                                ×\n                            </span>\n                        </div>\n                        <div className=\"modalBody\">{props.children}</div>\n                    </div>\n                </div>\n            </div>,\n            domElement\n        );\n    } else return <></>;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { is } from \"immutable\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { mainGetStatusAsync } from \"src/store/rootSelector\";\nimport { setStatusAsync } from \"src/store/main/actions\";\nimport { saveStatus } from \"src/store/saveStatus\";\nimport Item from \"src/models/item\";\nimport Button from \"src/component/UI/Button/Button\";\nimport FieldInput from \"src/component/UI/FieldInput/FieldInput\";\nimport Modal from \"src/component/UI/Modal/Modal\";\nimport { FaCloudUploadAlt as NoSavedIcon } from \"react-icons/fa\";\nimport { FaCheck as SaveIcon } from \"react-icons/fa\";\nimport { FaSpinner as PreloaderIcon } from \"react-icons/fa\";\nimport { FaTrashAlt as DeleteIcon } from \"react-icons/fa\";\n\nimport \"./FormItem.scss\";\n\ninterface IFromItemProps {\n    typeForm: \"create\" | \"edit\";\n    item: Item;\n    handleSave(item: Item): void;\n    handleDelete?(id: Item[\"id\"]): void;\n}\n\nexport default function FormItem(props: IFromItemProps) {\n    const dispatch = useCustomDispatch();\n    const [item, setItem] = useState(props.item);\n    const isItemNotSaved = !is(item, props.item);\n    const statusAsync = useCustomSelector(mainGetStatusAsync);\n    const [showModalDelete, setShowModalDelete] = useState(false);\n\n    useEffect(() => {\n        dispatch(setStatusAsync(\"saveItem\", isItemNotSaved ? saveStatus.notSaved : saveStatus.saved));\n    }, [dispatch, isItemNotSaved]);\n\n    return (\n        <div className=\"form-item\">\n            <div className=\"field name\">\n                <div className=\"label\">Название:</div>\n                <div className=\"value\">\n                    <FieldInput value={item.name} onChange={(e) => setItem(item.set(\"name\", e.currentTarget.value))} />\n                </div>\n            </div>\n            <div className=\"field count\">\n                <div className=\"label\">Количество:</div>\n                <div className=\"value\">\n                    <FieldInput\n                        value={String(item.count)}\n                        onChange={(e) => setItem(item.set(\"count\", Number(e.currentTarget.value)))}\n                        type=\"number\"\n                        min=\"1\"\n                    />\n                </div>\n            </div>\n            <div className=\"buttons\">\n                <Button className=\"buttonSave\" onClick={() => props.handleSave(item)}>\n                    {(statusAsync.saveItem === saveStatus.notSaved ||\n                        statusAsync.saveItem === saveStatus.errorServer) && <NoSavedIcon />}\n                    {statusAsync.saveItem === saveStatus.saved && <SaveIcon />}\n                    {statusAsync.saveItem === saveStatus.save && <PreloaderIcon className=\"preloaderIcon\" />}\n                    {props.typeForm === \"create\" && \"Добавить\"}\n                    {props.typeForm === \"edit\" && \"Сохранить\"}\n                </Button>\n                {typeof props.handleDelete === \"function\" && (\n                    <>\n                        {showModalDelete && (\n                            <Modal title=\"Удалить оборудование?\" onClose={() => setShowModalDelete(false)}>\n                                <div className=\"wrapperButtons\">\n                                    <button onClick={() => props.handleDelete!(props.item.id)}>Да</button>\n                                    <button onClick={() => setShowModalDelete(false)}>Нет</button>\n                                </div>\n                            </Modal>\n                        )}\n\n                        <Button className=\"buttonDelete\" onClick={() => setShowModalDelete(true)}>\n                            <DeleteIcon />\n                            Удалить\n                        </Button>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport { createItem } from \"src/store/item/actions\";\nimport Item from \"src/models/item\";\nimport FormItem from \"../FormItem\";\n\ninterface ICreateItemProps {\n    item: Item;\n}\n\nexport default function CreateItem(props: ICreateItemProps) {\n    const dispatch = useCustomDispatch();\n\n    const handleSave = (item: Item) => {\n        dispatch(createItem(item));\n    };\n\n    return <FormItem typeForm=\"create\" item={props.item} handleSave={handleSave} />;\n}\n","import React from \"react\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { useParams } from \"react-router\";\nimport { mainGetStatusAsync, nodesGetNodeById } from \"src/store/rootSelector\";\nimport Item, { initialItem } from \"src/models/item\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport { ICreateItemUrl } from \"src/App\";\nimport LoadNodes from \"src/component/Loading/LoadNodes\";\nimport LoadItems from \"src/component/Loading/LoadItems\";\nimport Catalog from \"src/component/Catalog/Catalog\";\nimport TreeView from \"src/component/TreeView/TreeView\";\nimport ControlPanel from \"src/component/ControlPanel/ControlPanel\";\nimport CreateItem from \"src/component/FormItem/CreateFormItem/CreateItem\";\nimport Header from \"src/component/UI/Header/Header\";\nimport { FaRegArrowAltCircleLeft as BackButtonIcon } from \"react-icons/fa\";\n\nexport default function CreateItemPage() {\n    const statusAsync = useCustomSelector(mainGetStatusAsync);\n    const { nodeId } = useParams<ICreateItemUrl>();\n    const ancestorNode = useCustomSelector(nodesGetNodeById, nodeId);\n    const item = ancestorNode ? new Item({ ...initialItem, nodeId: ancestorNode.id }) : undefined;\n\n    if (statusAsync.loadNodes !== loadStatus.loaded) {\n        return <LoadNodes />;\n    } else if (statusAsync.loadItems !== loadStatus.loaded) {\n        return <LoadItems />;\n    }\n\n    if (item && ancestorNode) {\n        const links = [\n            {\n                url: \"/catalog/node/\" + ancestorNode.id,\n                label: (\n                    <>\n                        <BackButtonIcon />\n                        Назад\n                    </>\n                ),\n            },\n        ];\n\n        return (\n            <Catalog\n                head={<>Добавить оборудование в \"{ancestorNode.name}\"</>}\n                navigation={<TreeView />}\n                control={<ControlPanel links={links} />}\n                content={\n                    <>\n                        <Header>Добавить оборудование в \"{ancestorNode.name}\"</Header>\n                        <CreateItem item={item} />\n                    </>\n                }\n            />\n        );\n    }\n\n    return <>404</>;\n}\n","import React from \"react\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport { updateItem, deleteItem } from \"src/store/item/actions\";\nimport Item from \"src/models/item\";\nimport FormItem from \"../FormItem\";\n\ninterface IEditFormItemProps {\n    item: Item;\n}\n\nexport default function EditItem(props: IEditFormItemProps) {\n    const dispatch = useCustomDispatch();\n\n    const handleSave = (item: Item) => {\n        dispatch(updateItem(item.id, item));\n    };\n\n    const handleDelete = (id: Item[\"id\"]) => {\n        dispatch(deleteItem(id));\n    };\n\n    return <FormItem typeForm=\"edit\" item={props.item} handleSave={handleSave} handleDelete={handleDelete} />;\n}\n","import React from \"react\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { useParams } from \"react-router\";\nimport {\n    mainGetStatusAsync,\n    itemsGetItemById,\n    nodesGetNodeById,\n    nodesGetMainSelectedNode,\n} from \"src/store/rootSelector\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport { IEditItemUrl } from \"src/App\";\nimport LoadNodes from \"src/component/Loading/LoadNodes\";\nimport LoadItems from \"src/component/Loading/LoadItems\";\nimport Catalog from \"src/component/Catalog/Catalog\";\nimport TreeView from \"src/component/TreeView/TreeView\";\nimport ControlPanel from \"src/component/ControlPanel/ControlPanel\";\nimport EditItem from \"src/component/FormItem/EditFormItem/EditItem\";\nimport Header from \"src/component/UI/Header/Header\";\nimport { FaRegArrowAltCircleLeft as BackButtonIcon } from \"react-icons/fa\";\n\nexport default function EditItemPage() {\n    const statusAsync = useCustomSelector(mainGetStatusAsync);\n    const { itemId } = useParams<IEditItemUrl>();\n\n    const item = useCustomSelector(itemsGetItemById, itemId);\n    const ancestorNode = useCustomSelector(nodesGetNodeById, item?.nodeId);\n    const mainSelectedNode = useCustomSelector(nodesGetMainSelectedNode);\n\n    if (statusAsync.loadNodes !== loadStatus.loaded) {\n        return <LoadNodes />;\n    } else if (statusAsync.loadItems !== loadStatus.loaded) {\n        return <LoadItems />;\n    }\n\n    if (item && ancestorNode) {\n        let links = [\n            {\n                url: \"/catalog/node/\" + ancestorNode.id,\n                label: (\n                    <>\n                        <BackButtonIcon />\n                        Перейти в \"{ancestorNode.name}\"\n                    </>\n                ),\n            },\n        ];\n\n        if (mainSelectedNode && mainSelectedNode.id !== ancestorNode.id) {\n            links.unshift({\n                url: \"/catalog/node/\" + mainSelectedNode.id,\n                label: (\n                    <>\n                        <BackButtonIcon />\n                        Перейти в \"{mainSelectedNode.name}\"\n                    </>\n                ),\n            });\n        }\n\n        return (\n            <Catalog\n                head={<>Редактировать оборудование \"{item.name}\"</>}\n                navigation={<TreeView />}\n                control={<ControlPanel links={links} />}\n                content={\n                    <>\n                        <Header>Редактировать оборудование \"{item.name}\"</Header>\n                        <EditItem item={item} />\n                    </>\n                }\n            />\n        );\n    }\n\n    return <>404</>;\n}\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport MainPage from \"src/component/Pages/MainPage/MainPage\";\nimport NodePage from \"src/component/Pages/NodePage/NodePage\";\nimport CreateItemPage from \"src/component/Pages/CreateItemPage/CreateItemPage\";\nimport EditItemPage from \"src/component/Pages/EditItemPage/EditItemPage\";\nimport \"typeface-roboto\";\n\nimport \"./App.scss\";\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Switch>\n                <Route exact path=\"/\">\n                    <Redirect to=\"/catalog\" />\n                </Route>\n                <Route exact path=\"/catalog\" component={MainPage} />\n                <Route exact path=\"/catalog/node/:nodeId\" component={NodePage} />\n                <Route exact path=\"/catalog/node/:nodeId/create_item\" component={CreateItemPage} />\n                <Route exact path=\"/catalog/item/:itemId\" component={EditItemPage} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n\nexport interface INodeUrl {\n    nodeId: string;\n}\n\nexport interface IEditItemUrl {\n    itemId: string;\n}\n\nexport interface ICreateItemUrl {\n    nodeId: string;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { createHashHistory } from \"history\";\nimport { routerMiddleware, ConnectedRouter } from \"connected-react-router\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"src/store/rootReducer\";\nimport rootSaga from \"src/store/rootSaga\";\nimport services from \"src/services\";\nimport App from \"./App\";\n\nexport const history = createHashHistory();\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    rootReducer(history),\n    composeEnhancers(applyMiddleware(sagaMiddleware, routerMiddleware(history)))\n);\nsagaMiddleware.run(rootSaga(services));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <App />\n            </ConnectedRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}